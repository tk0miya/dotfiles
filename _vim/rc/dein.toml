[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
  " Invoke post_source hooks on bootstrap
  autocmd VimEnter * call dein#call_hook('post_source')
'''

# United interface
[[plugins]]
repo = 'Shougo/denite.nvim'
hook_post_source = '''
  call denite#custom#alias('source', 'file/rec/git', 'file/rec')
  call denite#custom#var('file/rec/git', 'command',
  \  ['git', 'ls-files', '-co', '--exclude-standard'])
'''

# dependency of denite.nvim
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

# dependency of denite.nvim
[[plugins]]
repo = 'roxma/nvim-yarp'

# MRU plugin for denite.nvim
[[plugins]]
repo = 'Shougo/neomru.vim'

# Control ctags
[[plugins]]
repo = 'szw/vim-tags'

# Lint with flake8
[[plugins]]
repo = 'alfredodeza/khuno.vim'

# PEP8 based auto indentation
[[plugins]]
repo = 'hynek/vim-python-pep8-indent'

# Auto completion
[[plugins]]
repo = 'Shougo/neocomplete.vim'
hook_add = '''
  let g:neocomplete#enable_at_startup = 1             " Enable neocomplete at startup
  let g:neocomplete#enable_smart_case = 1             " Case sensitive search if pattern contains CAPITAL chars
  let g:neocomplete#enable_auto_close_preview = 1     " Close preview automatically
  if !exists('g:neocomplete#force_omni_input_patterns')
    let g:neocomplete#force_omni_input_patterns = {}
  endif
'''

# Auto completion for golang
[[plugins]]
repo = 'vim-jp/vim-go-extra'

# Ruby development helper
#[[plugins]]
#repo = 'marcus/rsense'

# rsense plugin for neocomplete
#[[plugins]]
#repo = 'supermomonga/neocomplete-rsense.vim'

# Auto complete 'end' keyword (in Ruby)
[[plugins]]
repo = 'tpope/vim-endwise'

# Enhance increment/decrement feature
[[plugins]]
repo = 'nishigori/increment-activator'

# Reference viewer
[[plugins]]
repo = 'thinca/vim-ref'

# Ruby plugin for vim-ref
[[plugins]]
repo = 'yuku-t/vim-ref-ri'

# Customize status line
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
  \  'mode_map': {'c': 'NORMAL'},
  \  'active': {
  \    'right': [
  \      [ 'linter_errors', 'linter_warnings' ],
  \    ]
  \  },
  \  'component_expand': {
  \    'linter_warnings': 'lightline#ale#warnings',
  \    'linter_errors': 'lightline#ale#errors',
  \  },
  \  'component_type': {
  \    'linter_warnings': 'warning',
  \    'linter_errors': 'errors',
  \  },
  \}
'''

# Colorscheme
[[plugins]]
repo = 'nanotech/jellybeans.vim'

# Colorscheme
[[plugins]]
repo = 'w0ng/vim-hybrid'

# Asynchronous Lint Engine
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_set_signs = 0         " Disable sign column
'''

# ALE indicator for lightline
[[plugins]]
repo = 'maximbaz/lightline-ale'

# Highlights quickfix errors
[[plugins]]
repo = 'cohama/vim-hier'

# Utilities for Ruby on Rails
[[plugins]]
repo = 'tpope/vim-rails'

# Syntax highlighting for markdown
[[plugins]]
repo = 'rcmdnk/vim-markdown'
hook_add = '''
  " Disable auto folding for markdown files
  let g:vim_markdown_folding_disabled=1
'''

# Syntax highlighting for code-blocks in markdown
[[plugins]]
repo = 'joker1007/vim-markdown-quote-syntax'

# Highlighting for CSV files
[[plugins]]
repo = 'mechatroner/rainbow_csv'
