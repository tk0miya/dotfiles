# Set up the prompt

autoload -U colors; colors
autoload -Uz promptinit
autoload -Uz vcs_info
promptinit
prompt walters
setopt prompt_subst
RPROMPT="%{${fg[green]}%}%~\${vcs_info_msg_0_}%{${reset_color}%}"

zstyle ':vcs_info:*' enable git hg
zstyle ':vcs_info:*' formats " [%b%c%u]"
zstyle ':vcs_info:*' actionformats " [%b; %a%c%u]"

case $TERM in
    screen)
        preexec() {
            echo -ne "\ek$1\e\\"
        }
        precmd() {
            vcs_info
            echo -ne "\ek$(basename $SHELL)\e\\"
        }
        ;;
    *)
        precmd() {
            vcs_info
        }
        ;;
esac

# Setup *env
if type rbenv > /dev/null 2>&1 ; then
    eval "$(rbenv init - --no-rehash)"
fi

if type pyenv > /dev/null 2>&1 ; then
    eval "$(pyenv init --path)"
fi

if type plenv > /dev/null 2>&1 ; then
    eval "$(plenv init - --no-rehash)"
fi

typeset -u path  # keep $PATH unique

fpath=($HOME/.zsh/completion $fpath)

export EDITOR=vim
export PIP_FIND_LINKS=$HOME/.pip/wheel
export GOPATH=$HOME/.golang
export LESS='-i -M -R -z-4 -x4 -q'

# Set locale
export LANG=ja_JP.UTF-8
export LC_ALL=ja_JP.UTF-8

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# Keep 1,000,000 lines of history within the shell and save it to ~/.zsh_history:
if [ -d /shell_history ]; then
    HISTFILE=/shell_history/.zsh_history  # in devcontainer
else
    HISTFILE=${HOME}/.zsh_history
fi

HISTSIZE=1000000
SAVEHIST=1000000

setopt hist_ignore_dups         # Do not record history if new command is same as previous one
setopt hist_ignore_all_dups     # Remove duplicated command from history if new command is already recorded
setopt hist_ignore_space        # Do not record history if command starts with spaces
setopt hist_reduce_blanks       # Remove superfluous blanks from commands
setopt hist_no_store            # Do not record 'history' command
setopt no_beep                  # Disable beep sound
setopt share_history            # Share history with zsh proceses

# Aliases
alias ls='ls -F'
alias vi='vim'

# replace `git` by `hub` command (if installed)
if command -v hub &> /dev/null; then
    eval "$(hub alias -s)"
fi

if [ `uname -s` = "Darwin" ]; then
    alias top='top -s1 -o cpu -R -F'
fi

# reverse menu compeltion (Shift + Tab)
bindkey "\e[Z" reverse-menu-complete

# Use modern completion system
autoload -Uz compinit
compinit -C

if [ -x /usr/bin/dircolors ]; then
    eval "$(dircolors -b)"
fi 

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' users ''
zstyle ':completion:*' verbose true

zstyle ':completion:*:(all-|)files' ignored-patterns "(*.pyc|*.egg-info)"
zstyle ':completion:*:cd:*' ignored-patterns "(*/)#*.egg-info"
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# known_hosts completion
if [ -f $HOME/.ssh/config ]; then
    _cache_hosts=(alrescha fomalhaut capella $(fgrep 'Host ' ~/.ssh/config | grep -v '*' | grep -v '^#' | awk '{print $2}' | sort))
fi
